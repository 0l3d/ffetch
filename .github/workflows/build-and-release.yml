name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal

    - name: Install system dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          pkg-config \
          libxcb1-dev \
          libxcb-render0-dev \
          libxcb-shape0-dev \
          libxcb-xfixes0-dev \
          libxcb-shm0-dev \
          libx11-dev \
          libxrandr-dev \
          libxext-dev \
          libxss-dev

    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release

    - name: Get binary name
      id: binary-name
      run: |
        BINARY_NAME=$(grep '^name = ' Cargo.toml | head -1 | cut -d '"' -f2)
        echo "binary-name=${BINARY_NAME}" >> $GITHUB_OUTPUT

    - name: Create archive
      run: |
        BINARY_NAME="${{ steps.binary-name.outputs.binary-name }}"
        ARCHIVE_NAME="${BINARY_NAME}-x86_64-unknown-linux-gnu"
        
        mkdir -p "${ARCHIVE_NAME}"
        cp "target/release/${BINARY_NAME}" "${ARCHIVE_NAME}/"
        [ -f README.md ] && cp README.md "${ARCHIVE_NAME}/"
        [ -f LICENSE ] && cp LICENSE "${ARCHIVE_NAME}/"
        
        tar czf "${ARCHIVE_NAME}.tar.gz" "${ARCHIVE_NAME}"
        echo "ASSET_PATH=${ARCHIVE_NAME}.tar.gz" >> $GITHUB_ENV

    - name: Get version
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=${VERSION}" >> $GITHUB_OUTPUT

    - name: Create release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ env.ASSET_PATH }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
